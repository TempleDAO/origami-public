pragma solidity 0.8.19;
// SPDX-License-Identifier: AGPL-3.0-or-later

import { IERC20 } from "@openzeppelin/contracts/token/ERC20/IERC20.sol";

import { OrigamiTest } from "test/foundry/OrigamiTest.sol";
import { OrigamiDexAggregatorSwapper } from "contracts/common/swappers/OrigamiDexAggregatorSwapper.sol";

/* solhint-disable func-name-mixedcase, contract-name-camelcase, not-rely-on-time */
contract OrigamiDexAggregatorSwapperPendleTest is OrigamiTest {
    OrigamiDexAggregatorSwapper public swapper;
    address internal constant pendleRouter = 0x888888888889758F76e7103c6CbF23ABbF58F946;

    IERC20 internal constant DAI = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);
    IERC20 internal constant pt_sUSDe = IERC20(0x6c9f097e044506712B58EAC670c9a5fd4BCceF13);

    address internal constant pt_sUSDE_market = 0xd1D7D99764f8a52Aff007b7831cc02748b2013b5;

    event Swap(address indexed sellToken, uint256 sellTokenAmount, address indexed buyToken, uint256 buyTokenAmount);

    function setUp() public {
        fork("mainnet", 20308622);
        vm.warp(1721006984);

        swapper = new OrigamiDexAggregatorSwapper(origamiMultisig);

        vm.prank(origamiMultisig);
        swapper.whitelistRouter(pendleRouter, true);
    }

    function encode(bytes memory data) internal pure returns (bytes memory) {
        return abi.encode(OrigamiDexAggregatorSwapper.RouteData({
            router: pendleRouter,
            data: data
        }));
    }

    function test_initialization() public {
        assertEq(swapper.owner(), origamiMultisig);
    }

    function test_buy_pt_success() public {
        // REQUEST:
        /*
curl -X 'GET' \
  'https://api-v2.pendle.finance/sdk/api/v1/swapExactTokenForPt?chainId=1&receiverAddr=0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f&marketAddr=0xd1d7d99764f8a52aff007b7831cc02748b2013b5&tokenInAddr=0x6b175474e89094c44da98b954eedeac495271d0f&amountTokenIn=100000000000000000000000&slippage=0.99' \
  -H 'accept: application/json' | jq
        */

        // Pulled from the quote data above
        bytes memory data = hex"c81f847a0000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d1d7d99764f8a52aff007b7831cc02748b2013b5000000000000000000000000000000000000000000000037ebf940a196e93a9f000000000000000000000000000000000000000000000aec16ae9f8f798d73150000000000000000000000000000000000000000000081f974513791c0133fe00000000000000000000000000000000000000000000015d82d5d3f1ef31ae62a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000002463336b850a00000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000be00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000000000000000000000000152d02c7e14af68000000000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000001e8b6ac39f8a33f46a6eb2d1acd1047b99180ad100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b5000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000944e21fd0e90000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000006c000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000004095d02f7d00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd670000000000000000000000000000000000000000000000000000000000000040d90ce491000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000167478921b907422f8e88b43c4af2b8bea278d3a00000000000000000000000083f20f44975d03b1b09e64809b757c47f942beea0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a349700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000001350c23fcc8edb965b1200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000146a4e9ccb1a6d6000000000000137831e07fa1c00385c90000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000888888888889758f76e7103c6cbf23abbf58f94600000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000f935b19ffb4999c6b07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000152d02c7e14af680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002297b22536f75726365223a2250656e646c65222c22416d6f756e74496e555344223a2239393936322e37222c22416d6f756e744f7574555344223a223130303033332e3037373132363130393637222c22526566657272616c223a22222c22466c616773223a332c22416d6f756e744f7574223a223931393432313636343736323033373334383238343839222c2254696d657374616d70223a313732313031363634392c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a2242467552715752332f744855374b7657755173734f30594a395858467a6748745547675030644b7367536b764a367039435349382f6171494d7a6155506a356a4b49775a724d3252325364723165796d415541436144324c7759614e4d576856374b566547744b39574d3768647935556e76456974494f38646a2b63774c394749522b6d64506c6b567467304c576e45566279767242634e66585a306d30755679634e71786c504645675048772b7135325834424c58706f4652714a522f66734b7632624b69415337324537464f3232624e557164544f7966367a72344b4d4d67516a4e446d55745730674b6d716c444c6447467a54615048573353486162732b5a79614e6b50336a674953726b7444576871475a686a2b7765687259534e6b69382b366e7a72713065483843694f774e7141795a4231392f495a3955644751796d2b42386433595a2f6d6a493532584d42343062513d3d227d7d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        uint256 sellTokenAmount = 100_000e18; 
        vm.startPrank(alice);
        deal(address(DAI), alice, sellTokenAmount, true);
        DAI.approve(address(swapper), sellTokenAmount);

        uint256 expectedBuyTokenAmount = 103_138.573003111151403237e18;
        vm.expectEmit(address(swapper));
        emit Swap(address(DAI), sellTokenAmount, address(pt_sUSDe), expectedBuyTokenAmount);
        uint256 buyTokenAmount = swapper.execute(DAI, sellTokenAmount, pt_sUSDe, encode(data));

        assertEq(buyTokenAmount, expectedBuyTokenAmount);
        assertEq(DAI.balanceOf(alice), 0);
        assertEq(DAI.balanceOf(address(swapper)), 0);

        assertEq(pt_sUSDe.balanceOf(alice), expectedBuyTokenAmount);
        assertEq(pt_sUSDe.balanceOf(address(swapper)), 0);
    }

    function test_sell_pt_success() public {
        // REQUEST:
        /*
curl -X 'GET' \
  'https://api-v2.pendle.finance/sdk/api/v1/swapExactPtForToken?chainId=1&receiverAddr=0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f&marketAddr=0xd1d7d99764f8a52aff007b7831cc02748b2013b5&amountPtIn=100000000000000000000000&tokenOutAddr=0x6b175474e89094c44da98b954eedeac495271d0f&slippage=0.99' \
  -H 'accept: application/json' | jq
        */

        // Pulled from the quote data above
        bytes memory data = hex"594a88cc0000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f000000000000000000000000d1d7d99764f8a52aff007b7831cc02748b2013b500000000000000000000000000000000000000000000152d02c7e14af680000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000b400000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000000000000000000000000003471e9c62d3d194cfe0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000001e8b6ac39f8a33f46a6eb2d1acd1047b99180ad100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b5000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000944e21fd0e90000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000006c000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000040d90ce491000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000167478921b907422f8e88b43c4af2b8bea278d3a0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a349700000000000000000000000083f20f44975d03b1b09e64809b757c47f942beea000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012d8188ca95b01d9d31c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004095d02f7d0000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000408000000000000000000000000000000000000000000012afc0111ed2cbb8bc20000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000002000000000000000000157b4108ac8a135000000000000147c7f5169abdde213910000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000888888888889758f76e7103c6cbf23abbf58f9460000000000000000000000000000000000000000000012d8188ca95b01d9d31c000000000000000000000000000000000000000000001063990dee2317e80fa7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd6700000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000012d8188ca95b01d9d31c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002327b22536f75726365223a2250656e646c65222c22416d6f756e74496e555344223a2239363831392e3838323237363535323132222c22416d6f756e744f7574555344223a2239363730372e3831343637373837383738222c22526566657272616c223a22222c22466c616773223a332c22416d6f756e744f7574223a223936373433393030313532363335373031393930323839222c2254696d657374616d70223a313732313031363834312c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a225347333741334e65736e624e74422f4133394e6f6950694f474c466f502b3156725259424f6d384f533461413676662b47624f686f76742f376a6e6f4232463772624e7a4868793879424772374a6e48414d776a303169797568645966376d6b6d70764271456b4b5544626d6f6463354b374c47327942656e58434f6279476d33684e44614a6b696b6d5479324b4d7753365474426f455a7149426b337978504c68494e3532747771396650795367534e34723756526562552b565243714a4b74664a7a744e54364434384d59716948676169717a422b6e79484f484653726d46306f6d65595930672b654a474c396a476c41366c612b4f4a44373063715936494857696e73664a734e7966705842327557426231514172423955594161496c74492f37497a5853466a4f4c656d68456a696b724d4533573279616a7157655a59737879377568696d305364762f33444f56414150513d3d227d7d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        uint256 sellTokenAmount = 100_000e18; 
        vm.startPrank(alice);
        deal(address(pt_sUSDe), alice, sellTokenAmount, false);
        pt_sUSDe.approve(address(swapper), sellTokenAmount);

        uint256 expectedBuyTokenAmount = 96_762.752398717990715408e18;
        vm.expectEmit(address(swapper));
        emit Swap(address(pt_sUSDe), sellTokenAmount, address(DAI), expectedBuyTokenAmount);
        uint256 buyTokenAmount = swapper.execute(pt_sUSDe, sellTokenAmount, DAI, encode(data));

        assertEq(buyTokenAmount, expectedBuyTokenAmount);
        assertEq(pt_sUSDe.balanceOf(alice), 0);
        assertEq(pt_sUSDe.balanceOf(address(swapper)), 0);

        assertEq(DAI.balanceOf(alice), expectedBuyTokenAmount);
        assertEq(DAI.balanceOf(address(swapper)), 0);
    }

    function test_redeem_pt_to_dai_success() public {
        // Skip forward after the PT expiry.
        skip(365 days);

        // REQUEST:
        /*
curl -X 'GET' \
  'https://api-v2.pendle.finance/sdk/api/v1/redeemPyToToken?chainId=1&receiverAddr=0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f&ytAddr=0x20c8cf9714339fd018898cb5de84c089e48d1c87&amountPyIn=100000000000000000000000&tokenOutAddr=0x6b175474e89094c44da98b954eedeac495271d0f&slippage=0.99' \
  -H 'accept: application/json' | jq
        */

        // Pulled from the quote data above
        bytes memory data = hex"47f1de220000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f00000000000000000000000020c8cf9714339fd018898cb5de84c089e48d1c8700000000000000000000000000000000000000000000152d02c7e14af680000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000000000000000000000000036225cb35bbecb30750000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000001e8b6ac39f8a33f46a6eb2d1acd1047b99180ad100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b5000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000944e21fd0e90000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000006c000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000040d90ce491000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000167478921b907422f8e88b43c4af2b8bea278d3a0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a349700000000000000000000000083f20f44975d03b1b09e64809b757c47f942beea000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013737aee1e77eebd19ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004095d02f7d000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000040800000000000000000000000000000000000000000001349d527d43e9fe71e0f000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000002000000000000000000162c62974a0884600000000000015256c360fd6875eedf10000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000888888888889758f76e7103c6cbf23abbf58f9460000000000000000000000000000000000000000000013737aee1e77eebd19ff0000000000000000000000000000000000000000000010eabcf80cab9f7f24c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd6700000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000013737aee1e77eebd19ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002327b22536f75726365223a2250656e646c65222c22416d6f756e74496e555344223a2239393933382e3435343131313839303934222c22416d6f756e744f7574555344223a2239393832322e3737353331393538393335222c22526566657272616c223a22222c22466c616773223a332c22416d6f756e744f7574223a223939383630303233313038323038373130303533333631222c2254696d657374616d70223a313732313031373032352c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a22644e6f36315a5963566f393052655a4a5678676978432f776d336d3273454e646d68647945713171776c72722b327031746237716b564779317357614862754370424d684653696136687969755864434b7135647057757a7159483165397771676644434a425171553647564a487a6431304b787437685a3138572b714d357a4378504b584d767478526370764638694533702b6a4d772f577a64454b2f56313444537135386f4e504864646b664971764769324775476c462f4a726b33726864486271357358676b61547941392f7558336f476e4b51342f534c41664232636e622b6b4650777041444a61597a4c416e6c666c42426a486d61686a69363741464b6b675367542f5879644b6754314170596467686764596d70536c4a6e6c687a46526c384655776c4d386674766738623266522b413137454438483836307a302b572b6d4c424b54734d68596d30774441382b30773d3d227d7d000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        IERC20 pt_sUSDe_Apr24 = IERC20(0xA0e3D7418A34057016403197064b70c127E01e19);

        uint256 sellTokenAmount = 100_000e18; 
        vm.startPrank(alice);
        deal(address(pt_sUSDe_Apr24), alice, sellTokenAmount, false);
        pt_sUSDe_Apr24.approve(address(swapper), sellTokenAmount);

        uint256 expectedBuyTokenAmount = 99_859.797662633713856677e18;
        vm.expectEmit(address(swapper));
        emit Swap(address(pt_sUSDe_Apr24), sellTokenAmount, address(DAI), expectedBuyTokenAmount);
        uint256 buyTokenAmount = swapper.execute(pt_sUSDe_Apr24, sellTokenAmount, DAI, encode(data));

        assertEq(buyTokenAmount, expectedBuyTokenAmount);
        assertEq(pt_sUSDe_Apr24.balanceOf(alice), 0);
        assertEq(pt_sUSDe_Apr24.balanceOf(address(swapper)), 0);

        assertEq(DAI.balanceOf(alice), expectedBuyTokenAmount);
        assertEq(DAI.balanceOf(address(swapper)), 0);
    }

    function test_redeem_pt_to_usde_success() public {
        // REQUEST:
        /*
curl -X 'GET' \
  'https://api-v2.pendle.finance/sdk/api/v1/redeemPyToToken?chainId=1&receiverAddr=0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f&ytAddr=0x20c8cf9714339fd018898cb5de84c089e48d1c87&amountPyIn=100000000000000000000000&tokenOutAddr=0x4c9EDD5852cd905f086C759E8383e09bff1E68B3&slippage=0.99' \
  -H 'accept: application/json' | jq
        */

        // Pulled from the quote data above
        bytes memory data = hex"47f1de220000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f00000000000000000000000020c8cf9714339fd018898cb5de84c089e48d1c8700000000000000000000000000000000000000000000152d02c7e14af680000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000004c9edd5852cd905f086c759e8383e09bff1e68b30000000000000000000000000000000000000000000000362bc158104d2487850000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000001e8b6ac39f8a33f46a6eb2d1acd1047b99180ad100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b5000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000ac4e21fd0e90000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000540000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000004c9edd5852cd905f086c759e8383e09bff1e68b3000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000040d90ce491000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000167478921b907422f8e88b43c4af2b8bea278d3a0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a349700000000000000000000000083f20f44975d03b1b09e64809b757c47f942beea0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000137379c38ed108e0cb1900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004095d02f7d000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000040800000000000000000000000000000000000000000001349d3f6e00f89fd6154000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd670000000000000000000000000000000000000000000000000000000000000040d90ce491000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000f36a4ba50c603204c3fc6d2da8b78a7b69cbc67d0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000004c9edd5852cd905f086c759e8383e09bff1e68b3000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015256c48fb39619ad34d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000016303b886c4201000000000000015291786665e2244f01f0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000004c9edd5852cd905f086c759e8383e09bff1e68b3000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000888888888889758f76e7103c6cbf23abbf58f94600000000000000000000000000000000000000000000137379c38ed108e0cb190000000000000000000000000000000000000000000010edac6b85181b6a59b2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000137379c38ed108e0cb1900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002337b22536f75726365223a2250656e646c65222c22416d6f756e74496e555344223a2239393933382e3336323637393130313737222c22416d6f756e744f7574555344223a223130303032372e3633353530393935313033222c22526566657272616c223a22222c22466c616773223a332c22416d6f756e744f7574223a223939393237373037383032313438383830353736353433222c2254696d657374616d70223a313732313031373434332c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a224e4e356b6464376c672b644e6a716754482f4a32476a487752597378537643644c522b6d466a307137543853477266416165766a4a5370325254485844567754694c43677679566e31423152614c7a6d5543732f6e46484a576f417261556d517a733543594251686d646e55634b7933737562714437345075347337496a436462616763476e2f5469447959354e594d2b744e6e7963572f73356a456a433948774e33756931617938526537694f376f4d31737245386545417a7062536c476f2f357438457671464e6c744f597273796a516a68564b6165783639374233724c73645334476d334a32673231585578356b764b436a675448352b355759692b75654a5035717344734b326a2f334643456d324474416770784272704e6c6b4f6664436c524b6b52396b4867706b36414f6741617663756b4c35636f3259656c6d74462f6f70673951437a2f6b31665941582b623173673d3d227d7d0000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        IERC20 pt_sUSDe_Apr24 = IERC20(0xA0e3D7418A34057016403197064b70c127E01e19);
        IERC20 usde = IERC20(0x4c9EDD5852cd905f086C759E8383e09bff1E68B3);

        uint256 sellTokenAmount = 100_000e18; 
        vm.startPrank(alice);
        deal(address(pt_sUSDe_Apr24), alice, sellTokenAmount, false);
        pt_sUSDe_Apr24.approve(address(swapper), sellTokenAmount);

        uint256 expectedBuyTokenAmount = 99_930.047721749606718530e18;
        vm.expectEmit(address(swapper));
        emit Swap(address(pt_sUSDe_Apr24), sellTokenAmount, address(usde), expectedBuyTokenAmount);
        uint256 buyTokenAmount = swapper.execute(pt_sUSDe_Apr24, sellTokenAmount, usde, encode(data));

        assertEq(buyTokenAmount, expectedBuyTokenAmount);
        assertEq(pt_sUSDe_Apr24.balanceOf(alice), 0);
        assertEq(pt_sUSDe_Apr24.balanceOf(address(swapper)), 0);

        assertEq(usde.balanceOf(alice), expectedBuyTokenAmount);
        assertEq(usde.balanceOf(address(swapper)), 0);
    }

    function test_redeem_pt_to_susde_success() public {
        // REQUEST:
        /*
curl -X 'GET' \
  'https://api-v2.pendle.finance/sdk/api/v1/redeemPyToToken?chainId=1&receiverAddr=0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f&ytAddr=0x20c8cf9714339fd018898cb5de84c089e48d1c87&amountPyIn=100000000000000000000000&tokenOutAddr=0x9D39A5DE30e57443BfF2A8307A4256c8797A3497&slippage=0.99' \
  -H 'accept: application/json' | jq
        */

        // Pulled from the quote data above
        bytes memory data = hex"47f1de220000000000000000000000005615deb798bb3e4dfa0139dfa1b3d433cc23b72f00000000000000000000000020c8cf9714339fd018898cb5de84c089e48d1c8700000000000000000000000000000000000000000000152d02c7e14af680000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000000000000000000000000031cb74039701721c920000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        IERC20 pt_sUSDe_Apr24 = IERC20(0xA0e3D7418A34057016403197064b70c127E01e19);
        IERC20 susde = IERC20(0x9D39A5DE30e57443BfF2A8307A4256c8797A3497);

        uint256 sellTokenAmount = 100_000e18; 
        vm.startPrank(alice);
        deal(address(pt_sUSDe_Apr24), alice, sellTokenAmount, false);
        pt_sUSDe_Apr24.approve(address(swapper), sellTokenAmount);

        uint256 expectedBuyTokenAmount = 91_857.263647241183098416e18;
        vm.expectEmit(address(swapper));
        emit Swap(address(pt_sUSDe_Apr24), sellTokenAmount, address(susde), expectedBuyTokenAmount);
        uint256 buyTokenAmount = swapper.execute(pt_sUSDe_Apr24, sellTokenAmount, susde, encode(data));

        assertEq(buyTokenAmount, expectedBuyTokenAmount);
        assertEq(pt_sUSDe_Apr24.balanceOf(alice), 0);
        assertEq(pt_sUSDe_Apr24.balanceOf(address(swapper)), 0);

        assertEq(susde.balanceOf(alice), expectedBuyTokenAmount);
        assertEq(susde.balanceOf(address(swapper)), 0);
    }

}
